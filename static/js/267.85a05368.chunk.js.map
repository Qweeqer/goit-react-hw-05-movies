{"version":3,"file":"static/js/267.85a05368.chunk.js","mappings":"qKAkBA,IAhBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,C,uJChBD,IAAMK,EAAM,mCAIL,SAASC,IACd,OAAOC,MAAM,2DAAD,OACiDF,EADjD,YAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAIM,SAASC,EAAUC,GACxB,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,4DACkGO,EADlG,YAEVJ,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASG,EAAYb,GAC1B,OAAOO,MAAM,sCAAD,OAC4BP,EAD5B,oBAC0CK,EAD1C,oBAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASI,EAAad,GAC3B,OAAOO,MAAM,sCAAD,OAC4BP,EAD5B,4BACkDK,EADlD,2BAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASK,EAAcf,GAC5B,OAAOO,MAAM,sCAAD,OAC4BP,EAD5B,4BACkDK,EADlD,2BAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,C,oHCxBD,EAbkB,SAAC,GAAmC,IAAjCM,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,kBAAMD,SAAUA,EAAhB,WACE,kBACEE,KAAK,OACLH,MAAOA,EACPE,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOL,MAAtB,KAEb,mBAAQG,KAAK,SAAb,sBAGL,E,SCyCD,EA9Ce,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAO1B,EAAP,KAAe2B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAChD,GAA0BN,EAAAA,EAAAA,UAASK,GAAnC,eAAOX,EAAP,KAAca,EAAd,KA8BA,OAhBAC,EAAAA,EAAAA,YAAU,WACHH,IAGLhB,EAAAA,EAAAA,IAAUgB,GACPnB,MAAK,YAAkB,IAAfuB,EAAc,EAAdA,QAEP,GADAR,EAAUQ,GACa,IAAnBA,EAAQC,OACV,OAAOC,MACL,2EAGL,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,iCACE,SAAC,EAAD,CACEX,MAAOA,EACPC,SA5Be,SAAAG,GAEnB,GADAA,EAAEkB,iBACY,KAAVtB,EACF,OAAOiB,MAAM,6BAEfP,EAAgB,CAAEa,MAAOvB,GAC1B,EAuBKE,SAjCoB,SAAAqB,GACxBV,EAASU,EACV,KAiCG,yBAAM3C,IAAU,SAAC4C,EAAA,EAAD,CAAY5C,OAAQA,QAGzC,C","sources":["components/MoviesList.jsx","components/Services/fetch-movie.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","const key = 'a04463f6e73719e916bcf081dea9993b';\n\n//------ Популярні фільми---\n\nexport function popularFilm() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук за ключовим словом----\n\nexport function findMovie(word) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${word}&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід карти----\nexport function findMovieId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід склад акторів----\nexport function findActorsId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід огляду----\nexport function findReviewsId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  ).then(respons => respons.json());\n}\n","const SearchBox = ({ value, onSubmit, onChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMovie } from 'components/Services/fetch-movie';\nimport SearchBox from 'components/SearchBox';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(searchName);\n\n  const updateQueryString = query => {\n    setValue(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert('Please fill in the field!');\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n    findMovie(searchName)\n      .then(({ results }) => {\n        setMovies(results);\n        if (results.length === 0) {\n          return alert(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      })\n      .catch(error => console.log(error));\n  }, [searchName]);\n\n  return (\n    <>\n      <SearchBox\n        value={value}\n        onSubmit={handleSubmit}\n        onChange={updateQueryString}\n      />\n      <div>{movies && <MoviesList movies={movies} />}</div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","key","popularFilm","fetch","then","respons","json","findMovie","word","findMovieId","findActorsId","findReviewsId","value","onSubmit","onChange","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchName","get","setValue","useEffect","results","length","alert","catch","error","console","log","preventDefault","query","MoviesList"],"sourceRoot":""}