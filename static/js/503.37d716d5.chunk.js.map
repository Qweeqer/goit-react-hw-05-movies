{"version":3,"file":"static/js/503.37d716d5.chunk.js","mappings":"uQAAA,IAAMA,EAAM,mCAIL,SAASC,IACd,OAAOC,MAAM,2DAAD,OACiDF,EADjD,YAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAIM,SAASC,EAAUC,GACxB,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,4DACkGO,EADlG,YAEVJ,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASG,EAAYC,GAC1B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC0CT,EAD1C,oBAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASK,EAAaD,GAC3B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,2BAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,CAGM,SAASM,EAAcF,GAC5B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACkDT,EADlD,2BAEVG,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAZ,GACf,C,oDCVD,IAxBmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaR,GAAMS,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFIP,EADC,KASjB,C,oHCQD,EAtBkB,SAAC,GAAmC,IAAjCW,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,kBAAMD,SAAUA,EAAhB,WACE,kBACEE,UAAU,iBACVC,KAAK,OACLJ,MAAOA,EACPE,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEC,OAAON,MAAtB,KAEb,mBAAQG,UAAU,eAAeC,KAAK,SAAtC,sBAKL,E,QCoCD,EA9Ce,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAChD,GAA0BN,EAAAA,EAAAA,UAASK,GAAnC,eAAOZ,EAAP,KAAcc,EAAd,KA8BA,OAhBAC,EAAAA,EAAAA,YAAU,WACHH,IAGL1B,EAAAA,EAAAA,IAAU0B,GACP7B,MAAK,YAAkB,IAAfiC,EAAc,EAAdA,QAEP,GADAR,EAAUQ,GACa,IAAnBA,EAAQC,OACV,OAAOC,MACL,2EAGL,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,iCACE,SAAC,EAAD,CACEZ,MAAOA,EACPC,SA5Be,SAAAI,GAEnB,GADAA,EAAEkB,iBACY,KAAVvB,EACF,OAAOkB,MAAM,6BAEfP,EAAgB,CAAEa,MAAOxB,GAC1B,EAuBKE,SAjCoB,SAAAsB,GACxBV,EAASU,EACV,KAiCG,yBAAMhC,IAAU,SAACiC,EAAA,EAAD,CAAYjC,OAAQA,QAGzC,C","sources":["Services/fetch-movie.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["const key = 'a04463f6e73719e916bcf081dea9993b';\n\n//------ Популярні фільми---\n\nexport function popularFilm() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук за ключовим словом----\n\nexport function findMovie(word) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${word}&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід карти----\nexport function findMovieId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід склад акторів----\nexport function findActorsId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US&page=1`\n  ).then(respons => respons.json());\n}\n\n//------- Пошук по ід огляду----\nexport function findReviewsId(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n  ).then(respons => respons.json());\n}\n\n//------------Trailer------------------------------/////\n// export const fetchFilmVideo = async id => {\n//   try {\n//     const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${key}`;\n//     const response = await fetch(url);\n//     return response.json();\n//   } catch (error) {\n//     alert('Oops, an error occurred');\n//   }\n// };\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import PropTypes from 'prop-types';\n\nconst SearchBox = ({ value, onSubmit, onChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        className=\"inputSearchBox\"\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <button className=\"btnSearchBox\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  value: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMovie } from '../Services/fetch-movie';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchName = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(searchName);\n\n  const updateQueryString = query => {\n    setValue(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert('Please fill in the field!');\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n    findMovie(searchName)\n      .then(({ results }) => {\n        setMovies(results);\n        if (results.length === 0) {\n          return alert(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      })\n      .catch(error => console.log(error));\n  }, [searchName]);\n\n  return (\n    <>\n      <SearchBox\n        value={value}\n        onSubmit={handleSubmit}\n        onChange={updateQueryString}\n      />\n      <div>{movies && <MoviesList movies={movies} />}</div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["key","popularFilm","fetch","then","respons","json","findMovie","word","findMovieId","id","findActorsId","findReviewsId","movies","location","useLocation","map","title","to","state","from","value","onSubmit","onChange","className","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchName","get","setValue","useEffect","results","length","alert","catch","error","console","log","preventDefault","query","MoviesList"],"sourceRoot":""}